name: Run tests

on: [push, pull_request]

jobs:
  run-tests:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-11, windows-latest]
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        include:
        - os: ubuntu-latest
          os-name: Linux
          pip-cache-path: ~/.cache/pip
        - os: macos-11
          os-name: MacOS
          pip-cache-path: ~/Library/Caches/pip
        - os: windows-latest
          os-name: w32
          pip-cache-path: ~\AppData\Local\pip\Cache

    name: Python ${{ matrix.python-version }} @ ${{ matrix.os-name }}
    runs-on: ${{ matrix.os }}

    steps:

      # Setup Python/pip
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge, conda-forge/label/python_rc
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ matrix.pip-cache-path }}
          key: ${{ runner.os }}-pip

      # Setup tox
      - name: Install dependencies
        run: |
          python --version
          python -m pip install --upgrade pip setuptools wheel
          pip --version
          pip install --upgrade virtualenv tox
          pip install --upgrade virtualenv "tox >= 3.15, < 4"
      - name: Set TOXENV
        run: |
          import os, sys
          pyver = '%d%d' % tuple(sys.version_info[:2])
          toxenv = 'py%s' % pyver
          if os.name == 'posix':
            toxenv += ',py%s-flake8' % pyver
          with open(os.environ['GITHUB_ENV'], 'a') as f:
            f.write('TOXENV=' + toxenv + '\n')
          print(toxenv)
        shell: python

      - name: Run tox
        run: |
          tox --version
          tox
